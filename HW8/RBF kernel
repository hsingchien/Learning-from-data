import pandas as pd
from sklearn import svm
import numpy as np
from sklearn.metrics import accuracy_score
train = pd.read_excel('train.xlsx')
test = pd.read_excel('test.xlsx')
train.columns = ['dig','inten','symm']
test.columns = ['dig','inten','symm']
Xin_use = train[train['dig'].isin([1,5])]
Xout_use = test[test['dig'].isin([1,5])]
Yin = np.zeros(Xin_use.shape[0])
Yout = np.zeros(Xout_use.shape[0])
Yin[Xin_use.dig == 1] = 1
Yout[Xout_use.dig == 1] =1
Cs = [0.01,1,100, 10**4, 10**6]
Eout = []
Xin = Xin_use.iloc[:,1:3]
Xout = Xout_use.iloc[:,1:3]
for c in Cs:
	clf = svm.SVC(C=c,kernel='rbf')
	clf.fit(Xin, Yin)
	Y_pred = np.sign(clf.predict(Xout))
	Eout.append(accuracy_score(np.sign(Yout),Y_pred))
print(1-np.array(Eout))
